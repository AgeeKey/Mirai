#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–£–ü–ï–† –ú–ò–†–ê–ô
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ autonomous_agent
"""

import sys
import os
from dotenv import load_dotenv

load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å
sys.path.insert(0, "/root/mirai/mirai-agent")

from core.autonomous_agent import AutonomousAgent


def main():
    print("=" * 80)
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –°–£–ü–ï–† –ú–ò–†–ê–ô")
    print("=" * 80)

    agent = AutonomousAgent()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    if agent.has_advanced_features:
        print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
    else:
        print("‚ö†Ô∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã")
        return

    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ 1: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript –∫–æ–¥–∞")
    print("=" * 80)

    js_code = """
    const numbers = [1, 2, 3, 4, 5];
    const sum = numbers.reduce((a, b) => a + b, 0);
    console.log('–°—É–º–º–∞ –º–∞—Å—Å–∏–≤–∞:', sum);
    console.log('–°—Ä–µ–¥–Ω–µ–µ:', sum / numbers.length);
    """

    result = agent.execute_code(js_code, "javascript")
    print(result)

    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ C++ –∫–æ–¥–∞")
    print("=" * 80)

    cpp_code = """
#include <iostream>
#include <vector>
using namespace std;

int main() {
    vector<int> nums = {1, 2, 3, 4, 5};
    int sum = 0;
    for(int n : nums) sum += n;
    cout << "–°—É–º–º–∞: " << sum << endl;
    cout << "MIRAI –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å C++!" << endl;
    return 0;
}
"""

    result = agent.execute_code(cpp_code, "cpp")
    print(result)

    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ 3: –†–∞–±–æ—Ç–∞ —Å PostgreSQL")
    print("=" * 80)

    result = agent.database_query(
        "postgres",
        "query",
        {"query": "SELECT current_database(), current_user, version() as pg_version"},
    )
    print(result)

    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ 4: –†–∞–±–æ—Ç–∞ —Å Redis (–∫—ç—à)")
    print("=" * 80)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Redis
    result1 = agent.database_query(
        "redis",
        "set",
        {"key": "mirai_power_level", "value": "OVER 9000!", "expire": 120},
    )
    print("–ó–∞–ø–∏—Å—å –≤ Redis:", result1)

    # –ß–∏—Ç–∞–µ–º –∏–∑ Redis
    result2 = agent.database_query("redis", "get", {"key": "mirai_power_level"})
    print("–ß—Ç–µ–Ω–∏–µ –∏–∑ Redis:", result2)

    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ 5: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Bash —Å–∫—Ä–∏–ø—Ç–∞")
    print("=" * 80)

    bash_code = """
#!/bin/bash
echo "ü§ñ MIRAI System Info:"
echo "Hostname: $(hostname)"
echo "Uptime: $(uptime -p)"
echo "Disk: $(df -h / | tail -1 | awk '{print $5}')"
"""

    result = agent.execute_code(bash_code, "bash")
    print(result)

    print("\n" + "=" * 80)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("=" * 80)

    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(
        f"   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤: {len(agent.multi_lang.get_supported_languages())}"
    )
    print(f"   ‚úÖ –ë–∞–∑ –¥–∞–Ω–Ω—ã—Ö: 4 (SQLite, PostgreSQL, Redis, MongoDB)")
    print(
        f"   ‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∞–≥–µ–Ω—Ç–∞: 8 (execute_python, search_web, read_file, write_file, run_command, create_task, execute_code, database_query)"
    )
    print("\nüöÄ MIRAI –≥–æ—Ç–æ–≤ –∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ!")


if __name__ == "__main__":
    main()
