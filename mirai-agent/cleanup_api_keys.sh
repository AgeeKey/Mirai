#!/bin/bash
# üõ°Ô∏è –ó–ê–©–ò–¢–ê API –ö–õ–Æ–ß–ï–ô - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ì–ê–†–ê–ù–¢–ò–†–£–ï–¢ —á—Ç–æ MIRAI –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ª–æ–º–∞–µ—Ç—Å—è –∏–∑-–∑–∞ –∫–ª—é—á–µ–π

set -e

echo "üõ°Ô∏è –ó–ê–©–ò–¢–ê API –ö–õ–Æ–ß–ï–ô MIRAI"
echo "================================"
echo ""

# 1. –£–ë–ò–¢–¨ –í–°–ï –°–¢–ê–†–´–ï –ü–†–û–¶–ï–°–°–´
echo "üßπ –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."

# –ù–∞–π—Ç–∏ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã MIRAI (–∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∏ vscode)
OLD_PIDS=$(ps aux | grep -E "mirai.*autonomous|mirai_autonomous" | grep -v "grep\|vscode\|bash\|cleanup" | awk '{print $2}')

if [ -z "$OLD_PIDS" ]; then
    echo "   ‚úÖ –°—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
else
    echo "   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: $OLD_PIDS"
    for pid in $OLD_PIDS; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–æ–≤—ã–π (—Å—Ç–∞—Ä—à–µ 5 –º–∏–Ω—É—Ç)
        PROCESS_AGE=$(ps -p $pid -o etimes= 2>/dev/null || echo "0")
        if [ "$PROCESS_AGE" -gt 300 ]; then
            echo "   üî™ –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å $pid (–≤–æ–∑—Ä–∞—Å—Ç: ${PROCESS_AGE}s)"
            kill -9 $pid 2>/dev/null || true
        else
            echo "   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å $pid (–≤–æ–∑—Ä–∞—Å—Ç: ${PROCESS_AGE}s)"
        fi
    done
    echo "   ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
fi

echo ""

# 2. –ü–†–û–í–ï–†–ò–¢–¨ API –ö–õ–Æ–ß
echo "üîë –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API –∫–ª—é—á–∞..."

cd /root/mirai/mirai-agent
source venv/bin/activate

API_CHECK=$(python3 << 'PYTHON'
import json
import sys
try:
    from openai import OpenAI
    
    with open('configs/api_keys.json') as f:
        config = json.load(f)
    
    api_key = config.get('openai')
    if not api_key:
        print("ERROR: No API key found")
        sys.exit(1)
    
    client = OpenAI(api_key=api_key)
    response = client.chat.completions.create(
        model='gpt-4o-mini',
        messages=[{'role': 'user', 'content': 'test'}],
        max_tokens=5
    )
    
    print("OK")
    sys.exit(0)
    
except Exception as e:
    print(f"ERROR: {str(e)}")
    sys.exit(1)
PYTHON
)

if [ "$API_CHECK" = "OK" ]; then
    echo "   ‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ!"
else
    echo "   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: $API_CHECK"
    echo ""
    echo "   üö® API –∫–ª—é—á –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo "   üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /root/mirai/mirai-agent/configs/api_keys.json"
    echo "   üîë –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–ª—é—á –∞–∫—Ç—É–∞–ª—å–Ω—ã–π"
    echo ""
    exit 1
fi

echo ""

# 3. –£–î–ê–õ–ò–¢–¨ –°–¢–ê–†–´–ï –õ–û–ì–ò (>100MB)
echo "üßπ –®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö –ª–æ–≥–æ–≤..."

LARGE_LOGS=$(find /tmp -name "*mirai*.log" -size +100M 2>/dev/null)
if [ -z "$LARGE_LOGS" ]; then
    echo "   ‚úÖ –ë–æ–ª—å—à–∏—Ö –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
else
    echo "   üì¶ –ù–∞–π–¥–µ–Ω—ã –±–æ–ª—å—à–∏–µ –ª–æ–≥–∏:"
    du -h $LARGE_LOGS
    echo "   üóëÔ∏è  –ê—Ä—Ö–∏–≤–∏—Ä—É—é –∏ –æ—á–∏—â–∞—é..."
    for log in $LARGE_LOGS; do
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10000 —Å—Ç—Ä–æ–∫
        tail -10000 "$log" > "${log}.tmp"
        mv "${log}.tmp" "$log"
        echo "   ‚úÖ $log –æ—á–∏—â–µ–Ω (–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10k —Å—Ç—Ä–æ–∫)"
    done
fi

echo ""

# 4. –ü–†–û–í–ï–†–ò–¢–¨ –ó–ê–ü–£–©–ï–ù –õ–ò –°–ï–†–í–ò–°
echo "üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞..."

RUNNING_PROCESSES=$(ps aux | grep "autonomous_service.py" | grep -v grep | wc -l)

if [ "$RUNNING_PROCESSES" -gt 0 ]; then
    echo "   ‚úÖ Autonomous service –∑–∞–ø—É—â–µ–Ω ($RUNNING_PROCESSES –ø—Ä–æ—Ü–µ—Å—Å(–æ–≤))"
    ps aux | grep "autonomous_service.py" | grep -v grep | awk '{print "      PID:", $2, "| Age:", $10, "| Mem:", $6/1024"MB"}'
else
    echo "   ‚ö†Ô∏è  Autonomous service –ù–ï –ó–ê–ü–£–©–ï–ù!"
    echo "   üöÄ –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å..."
    cd /root/mirai/mirai-agent
    nohup python autonomous_service.py > /tmp/mirai_autonomous.log 2>&1 &
    NEW_PID=$!
    echo "   ‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω (PID: $NEW_PID)"
fi

echo ""

# 5. –°–û–ó–î–ê–¢–¨ SYSTEMD SERVICE (–µ—Å–ª–∏ –Ω–µ—Ç)
echo "‚öôÔ∏è  –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd service..."

if [ -f /etc/systemd/system/mirai-autonomous.service ]; then
    echo "   ‚úÖ Systemd service —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "   üìù –°–æ–∑–¥–∞—é systemd service..."
    cat > /etc/systemd/system/mirai-autonomous.service << 'EOF'
[Unit]
Description=MIRAI Autonomous Service
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/root/mirai/mirai-agent
Environment="PATH=/root/mirai/mirai-agent/venv/bin:/usr/local/bin:/usr/bin:/bin"
ExecStartPre=/root/mirai/mirai-agent/cleanup_api_keys.sh
ExecStart=/root/mirai/mirai-agent/venv/bin/python autonomous_service.py
Restart=always
RestartSec=10
StandardOutput=append:/tmp/mirai_autonomous.log
StandardError=append:/tmp/mirai_autonomous.log

[Install]
WantedBy=multi-user.target
EOF
    
    systemctl daemon-reload
    echo "   ‚úÖ Systemd service —Å–æ–∑–¥–∞–Ω"
    echo "   üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: systemctl enable mirai-autonomous"
    echo "   üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: systemctl start mirai-autonomous"
fi

echo ""
echo "================================"
echo "‚úÖ –ó–ê–©–ò–¢–ê API –ö–õ–Æ–ß–ï–ô –ê–ö–¢–ò–í–ù–ê!"
echo ""
echo "üìä –ò–¢–û–ì:"
echo "   ‚úÖ –°—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —É–±–∏—Ç—ã"
echo "   ‚úÖ API –∫–ª—é—á –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "   ‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
echo "   ‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"
echo "   ‚úÖ Systemd –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
echo ""
echo "üõ°Ô∏è MIRAI –ó–ê–©–ò–©–ï–ù–ê –û–¢ –ü–û–õ–û–ú–û–ö –ö–õ–Æ–ß–ï–ô!"
echo ""
echo "üí° –î–æ–±–∞–≤—å –≤ crontab –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo "   */15 * * * * /root/mirai/mirai-agent/cleanup_api_keys.sh >> /tmp/mirai_cleanup.log 2>&1"
echo ""
