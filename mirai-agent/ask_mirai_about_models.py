#!/usr/bin/env python3
"""
üå∏ –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É MIRAI –æ –º–æ–¥–µ–ª—è—Ö OpenAI
–ö–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á
"""

import sys
import os
sys.path.insert(0, os.path.dirname(__file__))

from core.autonomous_agent import AutonomousAgent
from rich.console import Console
from rich.panel import Panel
from rich.markdown import Markdown

console = Console()

def ask_mirai_about_models():
    """–ó–∞–¥–∞—ë–º –≤–æ–ø—Ä–æ—Å—ã –æ –º–æ–¥–µ–ª—è—Ö OpenAI"""
    
    agent = AutonomousAgent()
    
    console.print(Panel.fit(
        "[bold magenta]üå∏ –í–æ–ø—Ä–æ—Å—ã –æ –ú–æ–¥–µ–ª—è—Ö OpenAI[/bold magenta]\n\n"
        "–°–ø—Ä–∞—à–∏–≤–∞–µ–º —É MIRAI –æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –∫ –º–æ–¥–µ–ª—è–º",
        border_style="magenta"
    ))
    
    questions = [
        {
            "title": "ü§ñ –¢–µ–∫—É—â–∞—è vs –ñ–µ–ª–∞–µ–º–∞—è –ú–æ–¥–µ–ª—å",
            "question": """
–¢—ã —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ GPT-4o-mini. 

1. –ö–∞–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—à—å —Å —ç—Ç–æ–π –º–æ–¥–µ–ª—å—é?
2. –ö–∞–∫–∞—è –º–æ–¥–µ–ª—å OpenAI —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã: GPT-4o, GPT-4-turbo, o1-preview, o1-mini?
3. –î–ª—è –∫–∞–∫–∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –±–æ–ª–µ–µ –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å?
4. –ú–æ–∂–µ—à—å –ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Å GPT-4o-mini –∏–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–µ–Ω –∞–ø–≥—Ä–µ–π–¥?
            """
        },
        {
            "title": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API",
            "question": """
–ö–∞–∫–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã OpenAI API —Ç–µ–±–µ –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á:

1. **Temperature** (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å vs –¥–µ—Ç–µ—Ä–º–∏–Ω–∏–∑–º):
   - –î–ª—è code generation: –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?
   - –î–ª—è –∞–Ω–∞–ª–∏–∑–∞: –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?
   - –î–ª—è creative tasks: –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?

2. **top_p** (nucleus sampling): –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?

3. **max_tokens**: —Ä–∞–∑–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á?

4. **frequency_penalty** –∏ **presence_penalty**: –Ω—É–∂–Ω—ã –ª–∏?

5. **Streaming**: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∂–∏–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤?
            """
        },
        {
            "title": "üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ú–æ–¥–µ–ª–∏",
            "question": """
–ù—É–∂–Ω—ã –ª–∏ —Ç–µ–±–µ —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á:

1. **Code generation** - –∫–∞–∫–∞—è –º–æ–¥–µ–ª—å –ª—É—á—à–µ? (GPT-4o, Claude, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è?)
2. **Analysis & reasoning** - o1-preview/o1-mini –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞?
3. **Long context tasks** - –º–æ–¥–µ–ª–∏ —Å –±–æ–ª—å—à–∏–º context window?
4. **Fast responses** - –ª—ë–≥–∫–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á?

–ò–ª–∏ –æ–¥–Ω–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –≤—Å–µ–≥–æ?
            """
        },
        {
            "title": "üí∞ Cost vs Quality",
            "question": """
–° —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞:

1. –ú–æ–∂–µ—à—å –ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ **GPT-4o-mini** (—Ç–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å)?
2. –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö **–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏** –Ω—É–∂–Ω–∞ GPT-4o –∏–ª–∏ o1-preview?
3. –ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–∫—Å –º–æ–¥–µ–ª–µ–π: –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∞ mini, —Å–ª–æ–∂–Ω—ã–µ –Ω–∞ full?
4. –ö–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞: –≤—Å–µ–≥–¥–∞ full –∏–ª–∏ —É–º–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ?
            """
        },
        {
            "title": "üöÄ –ë—É–¥—É—â–∏–µ –ú–æ–¥–µ–ª–∏",
            "question": """
–ö–æ–≥–¥–∞ OpenAI –≤—ã–ø—É—Å—Ç–∏—Ç –Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏:

1. –ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π —Ç–µ–±–µ –Ω—É–∂–Ω—ã?
2. –ù—É–∂–Ω–∞ –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ multimodal (vision, audio)?
3. –ù—É–∂–Ω—ã –ª–∏ fine-tuned –º–æ–¥–µ–ª–∏ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏?
4. –ö–∞–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è –≤ –º–æ–¥–µ–ª—è—Ö —Å–¥–µ–ª–∞—é—Ç —Ç–µ–±—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ?
            """
        },
        {
            "title": "üìä –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            "question": """
–î–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:

**PRIMARY MODEL** (–æ—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã):
- –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:
- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã (temperature, top_p, max_tokens):
- –î–ª—è –∫–∞–∫–∏—Ö –∑–∞–¥–∞—á:

**SECONDARY MODEL** (–¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á):
- –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:
- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- –î–ª—è –∫–∞–∫–∏—Ö –∑–∞–¥–∞—á:

**TERTIARY MODEL** (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á):
- –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:
- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- –î–ª—è –∫–∞–∫–∏—Ö –∑–∞–¥–∞—á:

–°–æ–∑–¥–∞–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã.
            """
        }
    ]
    
    results = {}
    
    for q in questions:
        console.print(f"\n[bold cyan]‚ïê‚ïê‚ïê {q['title']} ‚ïê‚ïê‚ïê[/bold cyan]\n")
        
        console.print(f"[yellow]–í–æ–ø—Ä–æ—Å:[/yellow]\n{q['question']}\n")
        console.print("[dim]üå∏ MIRAI –¥—É–º–∞–µ—Ç...[/dim]\n")
        
        try:
            answer = agent.think(q['question'], max_iterations=1)
            
            results[q['title']] = {
                "question": q['question'],
                "answer": answer
            }
            
            console.print(Panel(
                Markdown(answer),
                title=f"[bold green]üå∏ –û—Ç–≤–µ—Ç MIRAI[/bold green]",
                border_style="green"
            ))
            
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞: {e}[/red]")
            results[q['title']] = {"error": str(e)}
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    import json
    from pathlib import Path
    
    report_path = Path("/root/mirai/mirai-agent/reports/mirai_model_requirements.json")
    report_path.parent.mkdir(parents=True, exist_ok=True)
    
    with open(report_path, 'w', encoding='utf-8') as f:
        json.dump(results, f, indent=2, ensure_ascii=False)
    
    console.print(f"\n[green]‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_path}[/green]")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    console.print("\n[bold magenta]üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏—Ç–æ–≥–æ–≤—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é...[/bold magenta]\n")
    
    final_recommendation = agent.think("""
–ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–π –ö–û–ù–ö–†–ï–¢–ù–£–Æ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Æ –¥–ª—è MIRAI:

1. **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π** –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
```json
{
  "models": {
    "primary": {
      "name": "...",
      "temperature": 0.X,
      "top_p": 0.X,
      "max_tokens": XXXX,
      "use_cases": ["...", "..."]
    },
    "secondary": {
      "name": "...",
      "temperature": 0.X,
      "top_p": 0.X,
      "max_tokens": XXXX,
      "use_cases": ["...", "..."]
    }
  },
  "task_routing": {
    "code_generation": "primary/secondary",
    "analysis": "primary/secondary",
    "reasoning": "primary/secondary",
    "simple_tasks": "primary/secondary"
  }
}
```

2. **–ù—É–∂–µ–Ω –ª–∏ –∞–ø–≥—Ä–µ–π–¥** —Å GPT-4o-mini? (–î–ê/–ù–ï–¢ –∏ –ø–æ—á–µ–º—É)

3. **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1, 2, 3** - —á—Ç–æ –≤–Ω–µ–¥—Ä–∏—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å?

–ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º.
    """, max_iterations=1)
    
    console.print(Panel(
        Markdown(final_recommendation),
        title="[bold yellow]üìã –ò—Ç–æ–≥–æ–≤–∞—è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è[/bold yellow]",
        border_style="yellow"
    ))
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    recommendation_path = Path("/root/mirai/mirai-agent/reports/mirai_model_config_recommendation.md")
    with open(recommendation_path, 'w', encoding='utf-8') as f:
        f.write("# üå∏ MIRAI Model Configuration Recommendation\n\n")
        f.write(f"**Date:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        f.write("---\n\n")
        f.write(final_recommendation)
    
    console.print(f"\n[green]‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {recommendation_path}[/green]")
    
    console.print("\n[bold green]‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω![/bold green]\n")
    console.print("üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    console.print(f"  ‚Ä¢ {report_path}")
    console.print(f"  ‚Ä¢ {recommendation_path}")


if __name__ == "__main__":
    try:
        ask_mirai_about_models()
    except KeyboardInterrupt:
        console.print("\n[yellow]‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º[/yellow]")
    except Exception as e:
        console.print(f"\n[red]‚ùå –û—à–∏–±–∫–∞: {e}[/red]")
        import traceback
        traceback.print_exc()
