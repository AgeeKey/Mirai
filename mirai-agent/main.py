    :rtype: str
    Пример выполнения: 
    >>> await execute_async_task('значение 1', 'значение 2')
    'Результат выполнения'
    
    # Функция для асинхронного выполнения задачи
    async def execute_async_task(param1: str, param2: str) -> str:
        """
        Асинхронно выполняет задачу с переданными параметрами.

        :param param1: Описание параметра 1
        :param param2: Описание параметра 2
        :return: Результат выполнения задачи в виде строки
        """
        return 'Результат выполнения'

# Добавление комментариев
# Данная функция предназначена для асинхронной обработки задач.
# Она принимает два параметра, обрабатывает их и возвращает результат.
# Можно использовать для выполнения различных задач в приложении.
# Убедитесь, что параметры корректны перед вызовом функции.
# Пример вызова:
# result = await execute_async_task('значение 1', 'значение 2')
# 
# Важно! Не забудьте протестировать изменения.
# 
# Дополнительные примеры можно добавлять ниже.
# Например:
# ```
# result = await execute_async_task('example 1', 'example 2')
# print(result)
# ```
