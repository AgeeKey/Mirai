#!/usr/bin/env python3
"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë  MIRAI Phase 6: File Explorer Controller - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏        ‚ïë
‚ïë  File Explorer Operations (–®–∞–≥–∏ 106-120)                             ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–®–∞–≥–∏ 106-120: File Explorer Operations
- –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
- –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏ (–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ)
- –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤

–ê–≤—Ç–æ—Ä: MIRAI AI Team
–î–∞—Ç–∞: 2025-10-24
"""

import logging
import time
import platform
import pyautogui
from typing import Optional, List, Dict, Any
from pathlib import Path

from .app_launcher import launch_application, close_application
from .application_manager import get_application_manager

logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ pyautogui
pyautogui.FAILSAFE = True
pyautogui.PAUSE = 0.3


class FileExplorerController:
    """
    –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è File Explorer / Finder
    –†–µ–∞–ª–∏–∑—É–µ—Ç –®–∞–≥–∏ 106-120
    """
    
    def __init__(self):
        self.system = platform.system().lower()
        self.app_name = "explorer" if "windows" in self.system else "finder"
        self.is_opened = False
        self.current_directory: Optional[Path] = None
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handler
        manager = get_application_manager()
        manager.register_handler("file_explorer", self)
    
    def open_explorer(self) -> bool:
        """
        –®–∞–≥ 106: Open File Explorer
        
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã—Ç
        """
        logger.info("üìÅ –®–∞–≥ 106: –û—Ç–∫—Ä—ã—Ç–∏–µ File Explorer...")
        
        try:
            if "windows" in self.system:
                # Windows: Win+E
                pyautogui.hotkey('win', 'e')
            elif "darwin" in self.system:
                # Mac: Cmd+Space ‚Üí Finder
                pyautogui.hotkey('command', 'space')
                time.sleep(0.5)
                pyautogui.typewrite('finder', interval=0.1)
                pyautogui.press('enter')
            else:
                # Linux: –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º, –ø—ã—Ç–∞–µ–º—Å—è –æ–±—â–∏–π –ø–æ–¥—Ö–æ–¥
                result = launch_application("nautilus", wait_ready=True)
                self.is_opened = result.success
                return result.success
            
            time.sleep(1)
            self.is_opened = True
            
            # –®–∞–≥ 107: Detect File Explorer Window
            logger.info("‚úÖ –®–∞–≥ 107: File Explorer –æ–∫–Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è File Explorer: {e}")
            return False
    
    def navigate_to_directory(self, directory_path: str) -> bool:
        """
        –®–∞–≥ 108: Navigate to Directory
        
        Args:
            directory_path: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        """
        logger.info(f"üó∫Ô∏è –®–∞–≥ 108: –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ {directory_path}...")
        
        if not self.is_opened:
            logger.warning("File Explorer –Ω–µ –æ—Ç–∫—Ä—ã—Ç, –æ—Ç–∫—Ä—ã–≤–∞—é...")
            self.open_explorer()
        
        try:
            # Ctrl+L –∏–ª–∏ Alt+D –¥–ª—è –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            if "windows" in self.system:
                pyautogui.hotkey('alt', 'd')
            else:
                pyautogui.hotkey('ctrl', 'l')
            
            time.sleep(0.3)
            
            # –í–≤–æ–¥–∏–º –ø—É—Ç—å
            pyautogui.typewrite(directory_path, interval=0.05)
            time.sleep(0.3)
            
            # Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
            pyautogui.press('enter')
            time.sleep(0.5)
            
            self.current_directory = Path(directory_path)
            
            # –®–∞–≥ 109: Detect Current Directory
            logger.info(f"‚úÖ –®–∞–≥ 109: –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {self.current_directory}")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {e}")
            return False
    
    def list_files(self) -> List[str]:
        """
        –®–∞–≥ 110: List Files
        
        Returns:
            –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        """
        logger.info("üìã –®–∞–≥ 110: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")
        
        if not self.current_directory:
            logger.warning("–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            return []
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º Python –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
            files = [f.name for f in self.current_directory.iterdir()]
            
            logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
            return files
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {e}")
            return []
    
    def find_file(self, file_name: str) -> bool:
        """
        –®–∞–≥ 111: Find File
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
            
        Returns:
            bool: –ù–∞–π–¥–µ–Ω –ª–∏ —Ñ–∞–π–ª
        """
        logger.info(f"üîç –®–∞–≥ 111: –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ '{file_name}'...")
        
        try:
            # Ctrl+F –¥–ª—è –ø–æ–∏—Å–∫–∞
            pyautogui.hotkey('ctrl', 'f')
            time.sleep(0.5)
            
            # –í–≤–æ–¥–∏–º –∏–º—è —Ñ–∞–π–ª–∞
            pyautogui.typewrite(file_name, interval=0.05)
            time.sleep(0.5)
            
            # Enter –¥–ª—è –ø–æ–∏—Å–∫–∞
            pyautogui.press('enter')
            time.sleep(1)
            
            logger.info("‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
            return False
    
    def select_file(self, file_name: str) -> bool:
        """
        –®–∞–≥ 112: Select File
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –≤—ã–±—Ä–∞–Ω
        """
        logger.info(f"üëÜ –®–∞–≥ 112: –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ '{file_name}'...")
        
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª
            self.find_file(file_name)
            
            # –ö–ª–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–∞ Vision –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–ª–∏–∫–∞)
            logger.info("‚úÖ –§–∞–π–ª –≤—ã–±—Ä–∞–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è Vision –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞: {e}")
            return False
    
    def copy_file(self, file_name: str) -> bool:
        """
        –®–∞–≥ 113: Copy File
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω
        """
        logger.info(f"üìã –®–∞–≥ 113: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ '{file_name}'...")
        
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª
            self.select_file(file_name)
            
            # Ctrl+C –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            pyautogui.hotkey('ctrl', 'c')
            time.sleep(0.3)
            
            logger.info("‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return False
    
    def paste_file(self) -> bool:
        """
        –®–∞–≥ 114: Paste File
        
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω
        """
        logger.info("üìã –®–∞–≥ 114: –í—Å—Ç–∞–≤–∫–∞ —Ñ–∞–π–ª–∞...")
        
        try:
            # Ctrl+V –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
            pyautogui.hotkey('ctrl', 'v')
            time.sleep(0.5)
            
            logger.info("‚úÖ –§–∞–π–ª –≤—Å—Ç–∞–≤–ª–µ–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏: {e}")
            return False
    
    def delete_file(self, file_name: str, permanent: bool = False) -> bool:
        """
        –®–∞–≥ 115: Delete File
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            permanent: –£–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞ (Shift+Delete)
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ —É–¥–∞–ª–µ–Ω
        """
        logger.info(f"üóëÔ∏è –®–∞–≥ 115: –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ '{file_name}'...")
        
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª
            self.select_file(file_name)
            
            # Delete –∏–ª–∏ Shift+Delete
            if permanent:
                pyautogui.hotkey('shift', 'delete')
                time.sleep(0.5)
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                pyautogui.press('enter')
            else:
                pyautogui.press('delete')
            
            time.sleep(0.3)
            
            logger.info("‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            return False
    
    def rename_file(self, old_name: str, new_name: str) -> bool:
        """
        –®–∞–≥ 116: Rename File
        
        Args:
            old_name: –°—Ç–∞—Ä–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            new_name: –ù–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω
        """
        logger.info(f"‚úèÔ∏è –®–∞–≥ 116: –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ '{old_name}' ‚Üí '{new_name}'...")
        
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª
            self.select_file(old_name)
            
            # F2 –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
            pyautogui.press('f2')
            time.sleep(0.3)
            
            # –í–≤–æ–¥–∏–º –Ω–æ–≤–æ–µ –∏–º—è
            pyautogui.typewrite(new_name, interval=0.05)
            time.sleep(0.3)
            
            # Enter –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            pyautogui.press('enter')
            time.sleep(0.3)
            
            logger.info("‚úÖ –§–∞–π–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {e}")
            return False
    
    def create_folder(self, folder_name: str) -> bool:
        """
        –®–∞–≥ 117: Create New Folder
        
        Args:
            folder_name: –ò–º—è –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ —Å–æ–∑–¥–∞–Ω–∞
        """
        logger.info(f"üìÅ –®–∞–≥ 117: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ '{folder_name}'...")
        
        try:
            # Ctrl+Shift+N –¥–ª—è –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏
            pyautogui.hotkey('ctrl', 'shift', 'n')
            time.sleep(0.5)
            
            # –í–≤–æ–¥–∏–º –∏–º—è
            pyautogui.typewrite(folder_name, interval=0.05)
            time.sleep(0.3)
            
            # Enter –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
            pyautogui.press('enter')
            time.sleep(0.3)
            
            logger.info("‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏: {e}")
            return False
    
    def open_file_with_app(self, file_name: str, app_name: Optional[str] = None) -> bool:
        """
        –®–∞–≥ 118: Open File with App
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞
            app_name: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã—Ç
        """
        logger.info(f"üìÇ –®–∞–≥ 118: –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ '{file_name}'...")
        
        try:
            # –í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª
            self.select_file(file_name)
            
            if app_name:
                # Right-click ‚Üí Open with ‚Üí app_name
                pyautogui.rightClick()
                time.sleep(0.3)
                # –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - —Ç—Ä–µ–±—É–µ—Ç Vision
                logger.info(f"‚ö†Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ —Å {app_name} —Ç—Ä–µ–±—É–µ—Ç Vision")
            else:
                # Double-click –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                pyautogui.doubleClick()
            
            time.sleep(0.5)
            
            logger.info("‚úÖ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {e}")
            return False
    
    def view_properties(self, file_name: str) -> Dict[str, Any]:
        """
        –®–∞–≥ 119: View File Properties
        
        Args:
            file_name: –ò–º—è —Ñ–∞–π–ª–∞
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —Ñ–∞–π–ª–∞
        """
        logger.info(f"‚ÑπÔ∏è –®–∞–≥ 119: –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–π—Å—Ç–≤ '{file_name}'...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ Python API
            if self.current_directory:
                file_path = self.current_directory / file_name
                
                if file_path.exists():
                    stats = file_path.stat()
                    
                    properties = {
                        'name': file_name,
                        'size': stats.st_size,
                        'modified': stats.st_mtime,
                        'is_file': file_path.is_file(),
                        'is_directory': file_path.is_dir()
                    }
                    
                    logger.info(f"‚úÖ –°–≤–æ–π—Å—Ç–≤–∞ –ø–æ–ª—É—á–µ–Ω—ã: {properties}")
                    return properties
            
            logger.warning("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return {}
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤: {e}")
            return {}
    
    def close_explorer(self) -> bool:
        """
        –ó–∞–∫—Ä—ã—Ç—å File Explorer
        
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç
        """
        logger.info("üõë –®–∞–≥ 120: –ó–∞–∫—Ä—ã—Ç–∏–µ File Explorer...")
        
        try:
            # Alt+F4 –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
            pyautogui.hotkey('alt', 'f4')
            time.sleep(0.3)
            
            self.is_opened = False
            self.current_directory = None
            
            logger.info("‚úÖ File Explorer –∑–∞–∫—Ä—ã—Ç")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {e}")
            return False


# Convenience —Ñ—É–Ω–∫—Ü–∏–∏
def get_file_explorer_controller() -> FileExplorerController:
    """–ü–æ–ª—É—á–∏—Ç—å File Explorer –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä"""
    return FileExplorerController()
