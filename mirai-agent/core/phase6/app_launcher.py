#!/usr/bin/env python3
"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë  MIRAI Phase 6: App Launcher - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π                     ‚ïë
‚ïë  Application Launching & Control (–®–∞–≥–∏ 21-35)                        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–®–∞–≥–∏ 21-35: Application Launching & Control
- –®–∞–≥ 21: Launch Application
- –®–∞–≥ 22: Wait for Application Ready
- –®–∞–≥ 23: Handle Application Startup Errors
- ... –¥–æ –®–∞–≥–∞ 35

–ê–≤—Ç–æ—Ä: MIRAI AI Team
–î–∞—Ç–∞: 2025-10-24
"""

import logging
import time
import subprocess
import platform
import psutil
from typing import Optional, Dict, Any
from pathlib import Path
from dataclasses import dataclass

from .application_manager import get_application_manager

logger = logging.getLogger(__name__)


@dataclass
class LaunchResult:
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    success: bool
    pid: Optional[int] = None
    error: Optional[str] = None
    ready: bool = False
    window_detected: bool = False


class AppLauncher:
    """
    –®–∞–≥ 21: Launch Application
    
    –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –µ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
    """
    
    def __init__(self):
        self.system = platform.system().lower()
        self.readiness_waiter = AppReadinessWaiter()
        self.error_handler = StartupErrorHandler()
    
    def launch(self, app_name: str, wait_ready: bool = True) -> LaunchResult:
        """
        –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        
        Args:
            app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            wait_ready: –ñ–¥–∞—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            
        Returns:
            LaunchResult —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞–ø—É—Å–∫–∞
        """
        logger.info(f"üöÄ –®–∞–≥ 21: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è {app_name}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        manager = get_application_manager()
        app_info = manager.get_application(app_name)
        
        if not app_info:
            error = f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–µ—Å—Ç—Ä–µ"
            logger.error(f"‚ùå {error}")
            return LaunchResult(success=False, error=error)
        
        if not app_info.path:
            error = f"–ü—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é {app_name} –Ω–µ –Ω–∞–π–¥–µ–Ω"
            logger.error(f"‚ùå {error}")
            return LaunchResult(success=False, error=error)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ –ª–∏
        if app_info.is_running:
            logger.info(f"‚ÑπÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ")
            return LaunchResult(success=True, ready=True)
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            logger.info(f"‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫: {app_info.path}")
            
            if "windows" in self.system:
                # Windows: –∏—Å–ø–æ–ª—å–∑—É–µ–º subprocess —Å CREATE_NEW_CONSOLE
                process = subprocess.Popen(
                    [str(app_info.path)],
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    creationflags=subprocess.CREATE_NEW_CONSOLE if hasattr(subprocess, 'CREATE_NEW_CONSOLE') else 0
                )
            else:
                # Linux/Mac
                process = subprocess.Popen(
                    [str(app_info.path)],
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    start_new_session=True
                )
            
            pid = process.pid
            logger.info(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω, PID: {pid}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ manager
            app_info.is_running = True
            app_info.pid = pid
            manager.register_application(app_info)
            
            result = LaunchResult(success=True, pid=pid)
            
            # –®–∞–≥ 22: Wait for Application Ready
            if wait_ready:
                is_ready = self.readiness_waiter.wait_until_ready(app_name, pid)
                result.ready = is_ready
                
                if is_ready:
                    logger.info(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ")
                else:
                    logger.warning(f"‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –∑–∞–ø—É—â–µ–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ")
            
            return result
            
        except FileNotFoundError as e:
            # –®–∞–≥ 23: Handle Application Startup Errors
            error = f"–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}"
            logger.error(f"‚ùå {error}")
            return self.error_handler.handle_error(app_name, error)
            
        except PermissionError as e:
            error = f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞: {e}"
            logger.error(f"‚ùå {error}")
            return self.error_handler.handle_error(app_name, error)
            
        except Exception as e:
            error = f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}"
            logger.error(f"‚ùå {error}")
            return self.error_handler.handle_error(app_name, error)
    
    def close(self, app_name: str, force: bool = False) -> bool:
        """
        –®–∞–≥ 34: Close Application
        
        –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ gracefully –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
        
        Args:
            app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            force: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
            
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç–æ
        """
        logger.info(f"üõë –®–∞–≥ 34: –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è {app_name}...")
        
        manager = get_application_manager()
        app_info = manager.get_application(app_name)
        
        if not app_info or not app_info.is_running or not app_info.pid:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ")
            return False
        
        try:
            process = psutil.Process(app_info.pid)
            
            if force:
                logger.info("‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ...")
                process.kill()
            else:
                logger.info("üîÑ Graceful –∑–∞–∫—Ä—ã—Ç–∏–µ...")
                process.terminate()
                
                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–¥–æ 5 —Å–µ–∫—É–Ω–¥)
                try:
                    process.wait(timeout=5)
                except psutil.TimeoutExpired:
                    logger.warning("‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç graceful –∑–∞–∫—Ä—ã—Ç–∏—è, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ")
                    process.kill()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            app_info.is_running = False
            app_info.pid = None
            manager.register_application(app_info)
            
            logger.info(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –∑–∞–∫—Ä—ã—Ç–æ")
            return True
            
        except psutil.NoSuchProcess:
            logger.info(f"‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å {app_name} —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
            app_info.is_running = False
            app_info.pid = None
            manager.register_application(app_info)
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
            return False


class AppReadinessWaiter:
    """
    –®–∞–≥ 22: Wait for Application Ready
    
    –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∏ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ
    """
    
    def wait_until_ready(
        self,
        app_name: str,
        pid: int,
        timeout: int = 10,
        check_interval: float = 0.5
    ) -> bool:
        """
        –ñ–¥–∞—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        Args:
            app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            pid: PID –ø—Ä–æ—Ü–µ—Å—Å–∞
            timeout: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)
            check_interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Å–µ–∫—É–Ω–¥—ã)
            
        Returns:
            bool: –ì–æ—Ç–æ–≤–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        """
        logger.info(f"‚è≥ –®–∞–≥ 22: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ {app_name}...")
        
        start_time = time.time()
        
        while (time.time() - start_time) < timeout:
            try:
                process = psutil.Process(pid)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤
                if not process.is_running():
                    logger.error("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ")
                    return False
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞
                status = process.status()
                
                # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å sleeping –∏–ª–∏ running - —Å—á–∏—Ç–∞–µ–º –≥–æ—Ç–æ–≤—ã–º
                # (–±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã)
                if status in [psutil.STATUS_SLEEPING, psutil.STATUS_RUNNING]:
                    # –î–∞–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI
                    time.sleep(1)
                    logger.info(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –≥–æ—Ç–æ–≤–æ (—Å—Ç–∞—Ç—É—Å: {status})")
                    return True
                
            except psutil.NoSuchProcess:
                logger.error("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: {e}")
            
            time.sleep(check_interval)
        
        logger.warning(f"‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ {app_name}")
        return False


class StartupErrorHandler:
    """
    –®–∞–≥ 23: Handle Application Startup Errors
    
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    
    def handle_error(self, app_name: str, error_message: str) -> LaunchResult:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –∑–∞–ø—É—Å–∫–∞
        
        Args:
            app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            error_message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            
        Returns:
            LaunchResult —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ
        """
        logger.error(f"üö® –®–∞–≥ 23: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—É—Å–∫–∞ {app_name}")
        logger.error(f"   –û—à–∏–±–∫–∞: {error_message}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        error_type = self._categorize_error(error_message)
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ
        suggestion = self._get_suggestion(error_type)
        logger.info(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {suggestion}")
        
        return LaunchResult(
            success=False,
            error=f"{error_message} | –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {suggestion}"
        )
    
    def _categorize_error(self, error_message: str) -> str:
        """–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø –æ—à–∏–±–∫–∏"""
        error_lower = error_message.lower()
        
        if "not found" in error_lower or "–Ω–µ –Ω–∞–π–¥–µ–Ω" in error_lower:
            return "file_not_found"
        elif "permission" in error_lower or "–¥–æ—Å—Ç—É–ø" in error_lower:
            return "permission_denied"
        elif "dll" in error_lower or "library" in error_lower:
            return "missing_dependency"
        else:
            return "unknown"
    
    def _get_suggestion(self, error_type: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ—à–∏–±–∫–∏"""
        suggestions = {
            "file_not_found": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π",
            "permission_denied": "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞",
            "missing_dependency": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            "unknown": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
        }
        return suggestions.get(error_type, "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")


class LaunchCompleteValidator:
    """
    –®–∞–≥ 35: Application Launch/Control Complete
    
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø—É—Å–∫ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ
    """
    
    def validate(self, app_name: str, launch_result: LaunchResult) -> bool:
        """
        –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞
        
        Args:
            app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            launch_result: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—É—Å–∫–∞
            
        Returns:
            bool: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞
        """
        logger.info(f"‚úì –®–∞–≥ 35: –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ {app_name}...")
        
        if not launch_result.success:
            logger.error("‚ùå –ó–∞–ø—É—Å–∫ –Ω–µ —É—Å–ø–µ—à–µ–Ω")
            return False
        
        if not launch_result.ready:
            logger.warning("‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ, –Ω–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
            return False
        
        logger.info("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ")
        return True


# Convenience —Ñ—É–Ω–∫—Ü–∏–∏
def launch_application(app_name: str, wait_ready: bool = True) -> LaunchResult:
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (convenience function)"""
    launcher = AppLauncher()
    return launcher.launch(app_name, wait_ready)


def close_application(app_name: str, force: bool = False) -> bool:
    """–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (convenience function)"""
    launcher = AppLauncher()
    return launcher.close(app_name, force)
