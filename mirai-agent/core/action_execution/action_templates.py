#!/usr/bin/env python3
"""
üìù Action Templates - –®–∞–±–ª–æ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π
–®–∞–≥ 4 –∏–∑ 150: Load Action Templates

–ó–∞–≥—Ä—É–∂–∞–µ—Ç templates –¥–ª—è –±–∞–∑–æ–≤—ã—Ö actions:
- Click, Type, Navigate, Select, etc.
"""

import logging
from typing import Dict, Any, Optional
from enum import Enum

logger = logging.getLogger(__name__)


class ActionTemplate:
    """–®–∞–±–ª–æ–Ω –¥–µ–π—Å—Ç–≤–∏—è"""
    
    def __init__(
        self,
        name: str,
        action_type: str,
        default_params: Dict[str, Any],
        required_params: list,
        description: str
    ):
        self.name = name
        self.action_type = action_type
        self.default_params = default_params
        self.required_params = required_params
        self.description = description
    
    def validate_params(self, params: Dict[str, Any]) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
        for param in self.required_params:
            if param not in params:
                logger.error(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: {param}")
                return False
        return True
    
    def create_action(self, params: Dict[str, Any]) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞"""
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        action_params = {**self.default_params, **params}
        
        if not self.validate_params(action_params):
            raise ValueError(f"–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è {self.name}")
        
        return {
            'type': self.action_type,
            'params': action_params,
            'description': self.description
        }


class ActionTemplateLoader:
    """
    –ó–∞–≥—Ä—É–∑—á–∏–∫ —à–∞–±–ª–æ–Ω–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π
    
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è:
    - –î–µ–π—Å—Ç–≤–∏–π –º—ã—à–∏ (–∫–ª–∏–∫, drag, scroll)
    - –î–µ–π—Å—Ç–≤–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (type, shortcut, key press)
    - –î–µ–π—Å—Ç–≤–∏–π –æ–∫–æ–Ω (focus, maximize, close)
    - –î–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (open, close, switch)
    - –ë—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (navigate, click link, fill form)
    - –§–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (open, save, delete)
    """
    
    def __init__(self):
        self.templates: Dict[str, ActionTemplate] = {}
        self._load_default_templates()
        logger.info("üìù ActionTemplateLoader —Å–æ–∑–¥–∞–Ω")
    
    def _load_default_templates(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã"""
        
        # === MOUSE ACTIONS ===
        self.templates['click'] = ActionTemplate(
            name='click',
            action_type='mouse_click',
            default_params={'button': 'left', 'clicks': 1},
            required_params=['x', 'y'],
            description='–ö–ª–∏–∫ –º—ã—à—å—é'
        )
        
        self.templates['double_click'] = ActionTemplate(
            name='double_click',
            action_type='mouse_click',
            default_params={'button': 'left', 'clicks': 2},
            required_params=['x', 'y'],
            description='–î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫'
        )
        
        self.templates['right_click'] = ActionTemplate(
            name='right_click',
            action_type='mouse_click',
            default_params={'button': 'right', 'clicks': 1},
            required_params=['x', 'y'],
            description='–ü—Ä–∞–≤—ã–π –∫–ª–∏–∫'
        )
        
        self.templates['drag'] = ActionTemplate(
            name='drag',
            action_type='mouse_drag',
            default_params={'duration': 0.5},
            required_params=['x1', 'y1', 'x2', 'y2'],
            description='–ü–µ—Ä–µ—Ç–∞—â–∏—Ç—å –º—ã—à—å—é'
        )
        
        self.templates['scroll'] = ActionTemplate(
            name='scroll',
            action_type='mouse_scroll',
            default_params={'clicks': 3},
            required_params=['direction'],
            description='–°–∫—Ä–æ–ª–ª–∏—Ç—å'
        )
        
        # === KEYBOARD ACTIONS ===
        self.templates['type'] = ActionTemplate(
            name='type',
            action_type='keyboard_type',
            default_params={'interval': 0.05},
            required_params=['text'],
            description='–ù–∞–ø–µ—á–∞—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç'
        )
        
        self.templates['press'] = ActionTemplate(
            name='press',
            action_type='keyboard_press',
            default_params={},
            required_params=['key'],
            description='–ù–∞–∂–∞—Ç—å –∫–ª–∞–≤–∏—à—É'
        )
        
        self.templates['shortcut'] = ActionTemplate(
            name='shortcut',
            action_type='keyboard_shortcut',
            default_params={},
            required_params=['keys'],
            description='–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –∫–ª–∞–≤–∏—à'
        )
        
        self.templates['paste'] = ActionTemplate(
            name='paste',
            action_type='keyboard_paste',
            default_params={'shortcut': 'ctrl+v'},
            required_params=[],
            description='–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞'
        )
        
        # === WINDOW ACTIONS ===
        self.templates['focus_window'] = ActionTemplate(
            name='focus_window',
            action_type='window_focus',
            default_params={},
            required_params=['window_title'],
            description='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –æ–∫–Ω–æ'
        )
        
        self.templates['maximize'] = ActionTemplate(
            name='maximize',
            action_type='window_maximize',
            default_params={},
            required_params=['window_title'],
            description='–ú–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–∫–Ω–æ'
        )
        
        self.templates['minimize'] = ActionTemplate(
            name='minimize',
            action_type='window_minimize',
            default_params={},
            required_params=['window_title'],
            description='–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–∫–Ω–æ'
        )
        
        self.templates['close_window'] = ActionTemplate(
            name='close_window',
            action_type='window_close',
            default_params={},
            required_params=['window_title'],
            description='–ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ'
        )
        
        # === APPLICATION ACTIONS ===
        self.templates['open_app'] = ActionTemplate(
            name='open_app',
            action_type='application_open',
            default_params={'wait_for_load': True},
            required_params=['app_name'],
            description='–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
        )
        
        self.templates['close_app'] = ActionTemplate(
            name='close_app',
            action_type='application_close',
            default_params={'force': False},
            required_params=['app_name'],
            description='–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
        )
        
        # === BROWSER ACTIONS ===
        self.templates['navigate'] = ActionTemplate(
            name='navigate',
            action_type='browser_navigate',
            default_params={'wait_for_load': True},
            required_params=['url'],
            description='–ü–µ—Ä–µ–π—Ç–∏ –ø–æ URL'
        )
        
        self.templates['fill_form'] = ActionTemplate(
            name='fill_form',
            action_type='browser_fill_form',
            default_params={},
            required_params=['fields'],
            description='–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É'
        )
        
        # === FILE ACTIONS ===
        self.templates['open_file'] = ActionTemplate(
            name='open_file',
            action_type='file_open',
            default_params={'app': None},
            required_params=['path'],
            description='–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª'
        )
        
        self.templates['save_file'] = ActionTemplate(
            name='save_file',
            action_type='file_save',
            default_params={},
            required_params=['path'],
            description='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª'
        )
        
        logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.templates)} —à–∞–±–ª–æ–Ω–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π")
    
    def get_template(self, name: str) -> Optional[ActionTemplate]:
        """–ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –ø–æ –∏–º–µ–Ω–∏"""
        return self.templates.get(name)
    
    def list_templates(self) -> list:
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
        return [
            {
                'name': name,
                'type': tmpl.action_type,
                'description': tmpl.description
            }
            for name, tmpl in self.templates.items()
        ]
    
    def create_from_template(self, template_name: str, params: Dict[str, Any]) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞"""
        template = self.get_template(template_name)
        if not template:
            raise ValueError(f"–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_name}")
        
        return template.create_action(params)


# –¢–µ—Å—Ç—ã
if __name__ == "__main__":
    loader = ActionTemplateLoader()
    
    print("\n" + "="*60)
    print("üìù –î–û–°–¢–£–ü–ù–´–ï –®–ê–ë–õ–û–ù–´ –î–ï–ô–°–¢–í–ò–ô")
    print("="*60)
    
    templates = loader.list_templates()
    for tmpl in templates:
        print(f"‚Ä¢ {tmpl['name']}: {tmpl['description']}")
    
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –î–ï–ô–°–¢–í–ò–ô")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ö–ª–∏–∫
    action1 = loader.create_from_template('click', {'x': 100, 'y': 200})
    print(f"‚úì –ö–ª–∏–∫: {action1}")
    
    # –¢–µ—Å—Ç 2: –ü–µ—á–∞—Ç—å
    action2 = loader.create_from_template('type', {'text': 'Hello World'})
    print(f"‚úì –ü–µ—á–∞—Ç—å: {action2}")
    
    # –¢–µ—Å—Ç 3: –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –∫–ª–∞–≤–∏—à
    action3 = loader.create_from_template('shortcut', {'keys': ['ctrl', 'c']})
    print(f"‚úì Shortcut: {action3}")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã")
