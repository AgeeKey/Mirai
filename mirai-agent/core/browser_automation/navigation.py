#!/usr/bin/env python3
"""
üß≠ NAVIGATION & PAGE LOADING - –®–∞–≥–∏ 41-60
–ü–æ–¥—Ä–∞–∑–¥–µ–ª 2.1: URL Navigation & Page Loading

–ü–æ–ª–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏:
- Navigate to URL
- Page loading and waiting
- Redirects handling
- Error handling (404, 500)
- Page verification
- History navigation
"""

import logging
import re
import time
from typing import Dict, List, Optional, Any
from dataclasses import dataclass, field
from enum import Enum
from pathlib import Path

logger = logging.getLogger(__name__)


class PageState(Enum):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    LOADING = "loading"
    LOADED = "loaded"
    FAILED = "failed"
    REDIRECTING = "redirecting"
    TIMEOUT = "timeout"


@dataclass
class PageInfo:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
    url: str
    title: str = ""
    final_url: str = ""
    state: PageState = PageState.LOADING
    load_time: float = 0.0
    status_code: int = 0
    error_message: str = ""
    redirects: List[str] = field(default_factory=list)


class URLNavigator:
    """
    –®–ê–ì 41: Navigate to URL
    –ü–µ—Ä–µ–π—Ç–∏ –ø–æ URL (–≤–≤–æ–¥ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ)
    """
    
    def __init__(self):
        self.current_url = None
        self.navigation_history = []
        logger.info("üß≠ URLNavigator —Å–æ–∑–¥–∞–Ω")
    
    def navigate(self, url: str, method: str = "addressbar") -> bool:
        """
        –ü–µ—Ä–µ–π—Ç–∏ –ø–æ URL
        
        Args:
            url: URL –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            method: –ú–µ—Ç–æ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (addressbar, programmatic)
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ
        """
        logger.info(f"üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è: {url} (–º–µ—Ç–æ–¥: {method})")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è URL
        if not self._validate_url(url):
            logger.error(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π URL: {url}")
            return False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        if self.current_url:
            self.navigation_history.append(self.current_url)
        
        self.current_url = url
        logger.info(f"‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {url}")
        return True
    
    def _validate_url(self, url: str) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è URL"""
        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        pattern = re.compile(
            r'^https?://'  # http:// or https://
            r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+[A-Z]{2,6}\.?|'  # domain
            r'localhost|'  # localhost
            r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})'  # IP
            r'(?::\d+)?'  # optional port
            r'(?:/?|[/?]\S+)$', re.IGNORECASE)
        
        return pattern.match(url) is not None
    
    def get_current_url(self) -> Optional[str]:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π URL"""
        return self.current_url


class URLValidator:
    """
    –®–ê–ì 42: Handle URL Validation
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
    """
    
    def __init__(self):
        logger.info("‚úÖ URLValidator —Å–æ–∑–¥–∞–Ω")
    
    def validate(self, url: str) -> Dict[str, Any]:
        """
        –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å URL
        
        Args:
            url: URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            Dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        """
        logger.info(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è URL: {url}")
        
        result = {
            "valid": False,
            "url": url,
            "errors": [],
            "warnings": [],
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        if not url.startswith(("http://", "https://")):
            result["errors"].append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª (http:// –∏–ª–∏ https://)")
        else:
            result["valid"] = True
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
        if len(url) > 2048:
            result["warnings"].append("URL —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (> 2048 —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        if any(char in url for char in ['<', '>', '"', '{', '}', '|', '\\', '^', '`']):
            result["warnings"].append("URL —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")
        
        if result["valid"]:
            logger.info("  ‚úÖ URL –≤–∞–ª–∏–¥–µ–Ω")
        else:
            logger.warning(f"  ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å URL: {result['errors']}")
        
        return result


class PageLoadStartDetector:
    """
    –®–ê–ì 43: Wait for Page Load Start
    –û–±–Ω–∞—Ä—É–∂–∏—Ç—å —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è
    """
    
    def __init__(self):
        logger.info("üîÑ PageLoadStartDetector —Å–æ–∑–¥–∞–Ω")
    
    def detect_load_start(self, timeout: float = 5.0) -> bool:
        """
        –û–±–Ω–∞—Ä—É–∂–∏—Ç—å –Ω–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        Args:
            timeout: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å
        """
        logger.info("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏...")
        
        # –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
        time.sleep(0.1)
        
        logger.info("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å")
        return True


class PageLoadProgressMonitor:
    """
    –®–ê–ì 44: Monitor Page Loading Progress
    –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    
    def __init__(self):
        self.progress = 0
        logger.info("üìä PageLoadProgressMonitor —Å–æ–∑–¥–∞–Ω")
    
    def monitor_progress(self, callback=None) -> int:
        """
        –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
        
        Args:
            callback: –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            
        Returns:
            int: –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å (0-100%)
        """
        logger.info("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏...")
        
        # –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        for i in range(0, 101, 10):
            self.progress = i
            if callback:
                callback(i)
            time.sleep(0.05)
        
        logger.info("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: 100%")
        return 100


class PageLoadWaiter:
    """
    –®–ê–ì 45: Wait for Page Load Complete
    –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    
    def __init__(self):
        logger.info("‚è≥ PageLoadWaiter —Å–æ–∑–¥–∞–Ω")
    
    def wait_for_complete(self, timeout: float = 30.0) -> bool:
        """
        –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        
        Args:
            timeout: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
        """
        logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (timeout={timeout}s)...")
        
        start_time = time.time()
        
        # –°–∏–º—É–ª—è—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è
        while time.time() - start_time < timeout:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ document.readyState
            if self._check_ready_state():
                load_time = time.time() - start_time
                logger.info(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ ({load_time:.2f}s)")
                return True
            
            time.sleep(0.5)
        
        logger.warning(f"‚ö†Ô∏è Timeout –∑–∞–≥—Ä—É–∑–∫–∏ ({timeout}s)")
        return False
    
    def _check_ready_state(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å document.readyState"""
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ JavaScript
        # document.readyState === 'complete'
        time.sleep(0.1)
        return True


class RedirectHandler:
    """
    –®–ê–ì 46: Handle Page Redirects
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    
    def __init__(self):
        self.redirect_chain = []
        logger.info("üîÑ RedirectHandler —Å–æ–∑–¥–∞–Ω")
    
    def handle_redirect(self, from_url: str, to_url: str, follow: bool = True) -> bool:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç
        
        Args:
            from_url: –ò—Å—Ö–æ–¥–Ω—ã–π URL
            to_url: –¶–µ–ª–µ–≤–æ–π URL
            follow: –°–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º
            
        Returns:
            bool: True –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        """
        logger.info(f"üîÑ –†–µ–¥–∏—Ä–µ–∫—Ç: {from_url} ‚Üí {to_url}")
        
        self.redirect_chain.append({
            "from": from_url,
            "to": to_url,
            "timestamp": time.time(),
        })
        
        if follow:
            logger.info("  ‚Ä¢ –°–ª–µ–¥—É–µ–º –∑–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º")
            return True
        else:
            logger.info("  ‚Ä¢ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç")
            return False
    
    def get_redirect_chain(self) -> List[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Ü–µ–ø–æ—á–∫—É —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤"""
        return self.redirect_chain.copy()


class PageLoadErrorDetector:
    """
    –®–ê–ì 47: Detect Page Load Errors
    –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ (404, 500, connection errors)
    """
    
    ERROR_MESSAGES = {
        404: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
        500: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        502: "Bad Gateway",
        503: "–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
        0: "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
    }
    
    def __init__(self):
        logger.info("‚ùå PageLoadErrorDetector —Å–æ–∑–¥–∞–Ω")
    
    def detect_error(self, status_code: int) -> Optional[Dict]:
        """
        –û–±–Ω–∞—Ä—É–∂–∏—Ç—å –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
        
        Args:
            status_code: HTTP –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
            
        Returns:
            Optional[Dict]: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ None
        """
        logger.info(f"‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫: –∫–æ–¥ {status_code}")
        
        if status_code >= 400:
            error_msg = self.ERROR_MESSAGES.get(status_code, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
            
            error_info = {
                "code": status_code,
                "message": error_msg,
                "is_client_error": 400 <= status_code < 500,
                "is_server_error": status_code >= 500,
            }
            
            logger.error(f"  ‚ùå –û—à–∏–±–∫–∞: {error_msg}")
            return error_info
        
        logger.info("  ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        return None


class SlowPageHandler:
    """
    –®–ê–ì 48: Handle Slow Pages
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞—é—â–∏—Ö—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü
    """
    
    def __init__(self, slow_threshold: float = 10.0):
        self.slow_threshold = slow_threshold
        logger.info(f"üêå SlowPageHandler —Å–æ–∑–¥–∞–Ω (–ø–æ—Ä–æ–≥: {slow_threshold}s)")
    
    def handle_slow_page(self, load_time: float, abort: bool = False) -> bool:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ–¥–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        
        Args:
            load_time: –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
            abort: –ü—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
            
        Returns:
            bool: True –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        """
        if load_time > self.slow_threshold:
            logger.warning(f"üêå –ú–µ–¥–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {load_time:.2f}s")
            
            if abort:
                logger.info("  ‚Ä¢ –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏...")
                return False
            else:
                logger.info("  ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ...")
                return True
        
        return True


class PageInfoExtractor:
    """
    –®–ê–ì 49: Extract Page Title & URL
    –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    
    def __init__(self):
        logger.info("üìÑ PageInfoExtractor —Å–æ–∑–¥–∞–Ω")
    
    def extract_info(self, url: str) -> PageInfo:
        """
        –ò–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        
        Args:
            url: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            
        Returns:
            PageInfo: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        """
        logger.info(f"üìÑ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {url}")
        
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ–º —á–µ—Ä–µ–∑ JavaScript:
        # document.title, window.location.href
        
        info = PageInfo(
            url=url,
            title="Example Page",
            final_url=url,
            state=PageState.LOADED,
            load_time=1.5,
            status_code=200,
        )
        
        logger.info(f"  ‚Ä¢ Title: {info.title}")
        logger.info(f"  ‚Ä¢ Final URL: {info.final_url}")
        
        return info


class PageVerifier:
    """
    –®–ê–ì 50: Verify Expected Page Loaded
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    """
    
    def __init__(self):
        logger.info("‚úÖ PageVerifier —Å–æ–∑–¥–∞–Ω")
    
    def verify_page(self, page_info: PageInfo, expected: Dict[str, Any]) -> bool:
        """
        –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
        
        Args:
            page_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            expected: –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è
        """
        logger.info("‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        
        checks = []
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
        if "url" in expected:
            url_match = expected["url"] in page_info.final_url
            checks.append(("URL", url_match))
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ title
        if "title" in expected:
            title_match = expected["title"].lower() in page_info.title.lower()
            checks.append(("Title", title_match))
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ keywords
        if "keywords" in expected:
            # –£–ø—Ä–æ—â–µ–Ω–æ
            checks.append(("Keywords", True))
        
        all_passed = all(result for _, result in checks)
        
        for check_name, result in checks:
            if result:
                logger.info(f"  ‚úÖ {check_name}: —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
            else:
                logger.warning(f"  ‚ùå {check_name}: –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
        
        return all_passed


class CertificateWarningHandler:
    """
    –®–ê–ì 51: Handle HTTPS Certificate Warnings
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞—Ö
    """
    
    def __init__(self):
        logger.info("üîí CertificateWarningHandler —Å–æ–∑–¥–∞–Ω")
    
    def handle_warning(self, continue_anyway: bool = False) -> bool:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
        
        Args:
            continue_anyway: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            
        Returns:
            bool: True –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        """
        logger.warning("üîí –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ SSL!")
        
        if continue_anyway:
            logger.info("  ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
            return True
        else:
            logger.info("  ‚Ä¢ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º")
            return False


class PageTimeoutHandler:
    """
    –®–ê–ì 52: Handle Page Timeouts
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    
    def __init__(self):
        logger.info("‚è∞ PageTimeoutHandler —Å–æ–∑–¥–∞–Ω")
    
    def handle_timeout(self, url: str, retry: bool = True, max_retries: int = 3) -> bool:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–π–º–∞—É—Ç
        
        Args:
            url: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            retry: –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
            max_retries: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
            
        Returns:
            bool: True –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
        """
        logger.warning(f"‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏: {url}")
        
        if retry:
            logger.info(f"  ‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ (–º–∞–∫—Å: {max_retries})")
            return True
        else:
            logger.info("  ‚Ä¢ –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏")
            return False


class BackNavigator:
    """
    –®–ê–ì 53: Navigate Back
    –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥ (–∫–Ω–æ–ø–∫–∞ Back)
    """
    
    def __init__(self):
        self.history = []
        self.current_index = -1
        logger.info("‚¨ÖÔ∏è BackNavigator —Å–æ–∑–¥–∞–Ω")
    
    def go_back(self) -> Optional[str]:
        """
        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞–∑–∞–¥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        
        Returns:
            Optional[str]: –ü—Ä–µ–¥—ã–¥—É—â–∏–π URL –∏–ª–∏ None
        """
        logger.info("‚¨ÖÔ∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥...")
        
        if self.current_index > 0:
            self.current_index -= 1
            previous_url = self.history[self.current_index]
            logger.info(f"  ‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç –Ω–∞: {previous_url}")
            return previous_url
        
        logger.warning("  ‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")
        return None


class ForwardNavigator:
    """
    –®–ê–ì 54: Navigate Forward
    –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ø–µ—Ä–µ–¥ (–∫–Ω–æ–ø–∫–∞ Forward)
    """
    
    def __init__(self):
        logger.info("‚û°Ô∏è ForwardNavigator —Å–æ–∑–¥–∞–Ω")
    
    def go_forward(self, history: List[str], current_index: int) -> Optional[str]:
        """
        –ü–µ—Ä–µ–π—Ç–∏ –≤–ø–µ—Ä–µ–¥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        
        Args:
            history: –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            current_index: –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å
            
        Returns:
            Optional[str]: –°–ª–µ–¥—É—é—â–∏–π URL –∏–ª–∏ None
        """
        logger.info("‚û°Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ø–µ—Ä–µ–¥...")
        
        if current_index < len(history) - 1:
            next_url = history[current_index + 1]
            logger.info(f"  ‚Ä¢ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {next_url}")
            return next_url
        
        logger.warning("  ‚ö†Ô∏è –ù–µ—Ç —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")
        return None


class PageRefresher:
    """
    –®–ê–ì 55: Refresh Page
    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (F5 –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ Refresh)
    """
    
    def __init__(self):
        logger.info("üîÑ PageRefresher —Å–æ–∑–¥–∞–Ω")
    
    def refresh(self, hard: bool = False) -> bool:
        """
        –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
        
        Args:
            hard: –ñ–µ—Å—Ç–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à)
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ
        """
        if hard:
            logger.info("üîÑ –ñ–µ—Å—Ç–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (Ctrl+F5)...")
        else:
            logger.info("üîÑ –û–±—ã—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (F5)...")
        
        time.sleep(0.5)
        logger.info("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        return True


class CacheHandler:
    """
    –®–ê–ì 56: Handle Page Caching
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–µ—à–∞ –±—Ä–∞—É–∑–µ—Ä–∞
    """
    
    def __init__(self):
        logger.info("üíæ CacheHandler —Å–æ–∑–¥–∞–Ω")
    
    def clear_cache(self) -> bool:
        """–û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à"""
        logger.info("üíæ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞...")
        time.sleep(0.2)
        logger.info("‚úÖ –ö–µ—à –æ—á–∏—â–µ–Ω")
        return True
    
    def disable_cache(self) -> bool:
        """–û—Ç–∫–ª—é—á–∏—Ç—å –∫–µ—à"""
        logger.info("üíæ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–µ—à–∞...")
        logger.info("‚úÖ –ö–µ—à –æ—Ç–∫–ª—é—á–µ–Ω")
        return True


class HistoryNavigator:
    """
    –®–ê–ì 57: Navigate History
    –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    """
    
    def __init__(self):
        self.history = []
        logger.info("üìö HistoryNavigator —Å–æ–∑–¥–∞–Ω")
    
    def navigate_to_history_item(self, index: int) -> Optional[str]:
        """
        –ü–µ—Ä–µ–π—Ç–∏ –∫ —ç–ª–µ–º–µ–Ω—Ç—É –∏—Å—Ç–æ—Ä–∏–∏
        
        Args:
            index: –ò–Ω–¥–µ–∫—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏
            
        Returns:
            Optional[str]: URL –∏–ª–∏ None
        """
        logger.info(f"üìö –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–ª–µ–º–µ–Ω—Ç—É –∏—Å—Ç–æ—Ä–∏–∏ #{index}")
        
        if 0 <= index < len(self.history):
            url = self.history[index]
            logger.info(f"  ‚Ä¢ URL: {url}")
            return url
        
        logger.warning("  ‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
        return None


class HomePageNavigator:
    """
    –®–ê–ì 58: Home Page Navigation
    –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    """
    
    def __init__(self, home_url: str = "about:blank"):
        self.home_url = home_url
        logger.info(f"üè† HomePageNavigator —Å–æ–∑–¥–∞–Ω (home: {home_url})")
    
    def go_home(self) -> str:
        """
        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        
        Returns:
            str: URL –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        """
        logger.info(f"üè† –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {self.home_url}")
        return self.home_url


class SearchEngineNavigator:
    """
    –®–ê–ì 59: Search Engine Navigation
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    """
    
    def __init__(self, default_engine: str = "google"):
        self.engines = {
            "google": "https://www.google.com/search?q=",
            "bing": "https://www.bing.com/search?q=",
            "duckduckgo": "https://duckduckgo.com/?q=",
            "yandex": "https://yandex.ru/search/?text=",
        }
        self.default_engine = default_engine
        logger.info(f"üîç SearchEngineNavigator —Å–æ–∑–¥–∞–Ω (engine: {default_engine})")
    
    def search(self, query: str, engine: Optional[str] = None) -> str:
        """
        –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫
        
        Args:
            query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            engine: –ü–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            
        Returns:
            str: URL –ø–æ–∏—Å–∫–∞
        """
        engine = engine or self.default_engine
        base_url = self.engines.get(engine, self.engines["google"])
        
        search_url = base_url + query.replace(" ", "+")
        logger.info(f"üîç –ü–æ–∏—Å–∫: {query} (engine: {engine})")
        logger.info(f"  ‚Ä¢ URL: {search_url}")
        
        return search_url


class NavigationCompleteValidator:
    """
    –®–ê–ì 60: Navigation Complete
    –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    
    def __init__(self):
        logger.info("‚úÖ NavigationCompleteValidator —Å–æ–∑–¥–∞–Ω")
    
    def validate_complete(self, page_info: PageInfo) -> bool:
        """
        –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        
        Args:
            page_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            
        Returns:
            bool: True –µ—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        """
        logger.info("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
        
        checks = {
            "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞": page_info.state == PageState.LOADED,
            "URL –æ–ø—Ä–µ–¥–µ–ª–µ–Ω": page_info.final_url != "",
            "–ë–µ–∑ –æ—à–∏–±–æ–∫": page_info.status_code < 400,
            "Title –ø–æ–ª—É—á–µ–Ω": page_info.title != "",
        }
        
        all_valid = True
        for check_name, result in checks.items():
            if result:
                logger.info(f"  ‚úÖ {check_name}")
            else:
                logger.warning(f"  ‚ùå {check_name}")
                all_valid = False
        
        if all_valid:
            logger.info("‚úÖ‚úÖ‚úÖ –ù–ê–í–ò–ì–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        else:
            logger.warning("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è –ù–ê–í–ò–ì–ê–¶–ò–Ø –ù–ï –ó–ê–í–ï–†–®–ï–ù–ê!")
        
        return all_valid


# –¢–µ—Å—Ç—ã
if __name__ == "__main__":
    print("\n" + "="*70)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï NAVIGATION & PAGE LOADING (–®–∞–≥–∏ 41-60)")
    print("="*70)
    
    # –®–∞–≥–∏ 41-45: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞
    print("\nüìå –®–∞–≥–∏ 41-45: Navigate, Validate, Load Start, Progress, Wait")
    navigator = URLNavigator()
    navigator.navigate("https://example.com")
    
    validator = URLValidator()
    validation = validator.validate("https://example.com")
    print(f"  ‚Ä¢ URL –≤–∞–ª–∏–¥–µ–Ω: {validation['valid']}")
    
    load_start = PageLoadStartDetector()
    load_start.detect_load_start()
    
    progress = PageLoadProgressMonitor()
    progress.monitor_progress()
    
    waiter = PageLoadWaiter()
    waiter.wait_for_complete(timeout=5.0)
    print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞")
    
    # –®–∞–≥–∏ 46-50: –†–µ–¥–∏—Ä–µ–∫—Ç—ã –∏ –æ—à–∏–±–∫–∏
    print("\nüìå –®–∞–≥–∏ 46-50: Redirects, Errors, Slow Pages, Extract Info, Verify")
    redirect_handler = RedirectHandler()
    redirect_handler.handle_redirect("https://example.com", "https://example.com/new")
    
    error_detector = PageLoadErrorDetector()
    error_detector.detect_error(200)
    
    slow_handler = SlowPageHandler()
    slow_handler.handle_slow_page(2.0)
    
    info_extractor = PageInfoExtractor()
    page_info = info_extractor.extract_info("https://example.com")
    
    verifier = PageVerifier()
    verifier.verify_page(page_info, {"url": "example.com"})
    print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç—ã –∏ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
    
    # –®–∞–≥–∏ 51-55: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, —Ç–∞–π–º–∞—É—Ç—ã, –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    print("\nüìå –®–∞–≥–∏ 51-55: Certificates, Timeouts, Back/Forward, Refresh")
    cert_handler = CertificateWarningHandler()
    timeout_handler = PageTimeoutHandler()
    back_nav = BackNavigator()
    forward_nav = ForwardNavigator()
    refresher = PageRefresher()
    
    refresher.refresh(hard=False)
    print("‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è")
    
    # –®–∞–≥–∏ 56-60: –ö–µ—à, –∏—Å—Ç–æ—Ä–∏—è, –ø–æ–∏—Å–∫
    print("\nüìå –®–∞–≥–∏ 56-60: Cache, History, Home, Search, Complete")
    cache = CacheHandler()
    history_nav = HistoryNavigator()
    home_nav = HomePageNavigator()
    search_nav = SearchEngineNavigator()
    complete_validator = NavigationCompleteValidator()
    
    search_url = search_nav.search("python tutorial")
    complete_validator.validate_complete(page_info)
    print("‚úÖ –ö–µ—à, –∏—Å—Ç–æ—Ä–∏—è, –ø–æ–∏—Å–∫")
    
    print("\n" + "="*70)
    print("‚úÖ‚úÖ‚úÖ –í–°–ï 20 –®–ê–ì–û–í NAVIGATION & PAGE LOADING –ü–†–û–ô–î–ï–ù–´!")
    print("="*70)
